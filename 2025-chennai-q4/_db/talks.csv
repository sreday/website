YouTube,status,name,track,day,CAST AI,photo,linkedin,linkedin2,twitter,twitter2,title,abstract,description,bio
,keynote,Hemant Kamatgi,1,1,Ford Motor Company,Hemant Kamatgi.png,https://www.linkedin.com/in/hemant-kamatgi-0a56032/,,,,From Blind Spots to Brilliance: The Evolving Landscape of Observability,"Ever wonder how top teams keep complex systems running smoothly? This keynote will explore the current landscape of observability, moving beyond traditional pillars to embrace advanced techniques and holistic insights. We'll discuss how SRE teams are leveraging emerging technologies to navigate increasingly complex systems, transforming reactive firefighting into proactive engineering.",,
,confirmed,Meiyappan Kannappa,1,1,Ford Motor Company,Meiyappan Kannappa.png,https://www.linkedin.com/in/meiyappankannappa/,,,,Is Your AI Agent a Black Box? Here’s How to Open It,Why can't you just use your old monitoring tools for your new AI systems? This session answers that question by introducing AI Observability. You'll learn how to use AIOps to move beyond guesswork and effectively manage your AI agents and infrastructure,,"Meiyappan Kannappa is a Technical Director at Ford Motor Company with around 20 years of experience in designing and developing architectural frameworks and cloud applications. He specializes in modernizing applications to cloud-native technologies and has extensive experience building B2C and B2B systems within the e-Commerce, Connected Vehicles, and mobility sectors. As a technical enthusiast, he actively writes about innovative software architecture for digital transformation. "
,confirmed,Kunal Das,1,1,CAST AI,Kunal Das.png,https://www.linkedin.com/in/kunaldaskd/,,,,Common Things People Do Wrong in Kubernetes Environments,"Every Kubernetes deployment starts with good intentions, but the path to production is littered with configuration landmines that can destroy performance, compromise security, and create operational nightmares. This talk exposes the most common—and costly—mistakes that even experienced teams make when working with Kubernetes. What You'll Learn Through real-world case studies and live demonstrations, we'll explore: Security Disasters Every Kubernetes deployment starts with good intentions, but the path to production is littered with configuration landmines that can destroy performance, compromise security, and create operational nightmares. This talk exposes the most common—and costly—mistakes that even experienced teams make when working with Kubernetes. What You'll Learn Through real-world case studies and live demonstrations, we'll explore: Security Disasters

Why default RBAC configurations are a security nightmare waiting to happen The hidden dangers of running containers as root and how privilege escalation attacks unfold Container image vulnerabilities that slip through CI/CD pipelines Network policy misconfigurations that create unintended attack vectors

Configuration Catastrophes

Resource limits and requests: the difference between ""it works on my machine"" and production stability How improper health checks can cascade into cluster-wide failures Storage configuration mistakes that lead to data loss The subtle namespace and labeling errors that break everything

Observability Blind Spots

Why basic CPU/memory metrics aren't enough for Kubernetes troubleshooting Missing runtime security monitoring that could have prevented breaches Log aggregation anti-patterns that hide critical failure signals How to detect anomalous behavior before it impacts users

Scaling and Performance Traps

HPA configurations that create resource thrashing instead of smooth scaling Node scheduling mistakes that lead to resource waste and outages Network bottlenecks that aren't obvious until it's too late

Beyond the Problems: Practical Solutions This isn't just a catalog of disasters—you'll walk away with:

Actionable checklists for security hardening Tool recommendations for continuous monitoring and assessment Automation strategies to prevent configuration drift Proven patterns for reliable observability",,"Every Kubernetes deployment starts with good intentions, but the path to production is littered with configuration landmines that can destroy performance, compromise security, and create operational nightmares. This talk exposes the most common—and costly—mistakes that even experienced teams make when working with Kubernetes. What You'll Learn Through real-world case studies and live demonstrations, we'll explore: Security Disasters

Why default RBAC configurations are a security nightmare waiting to happen The hidden dangers of running containers as root and how privilege escalation attacks unfold Container image vulnerabilities that slip through CI/CD pipelines Network policy misconfigurations that create unintended attack vectors

Configuration Catastrophes

Resource limits and requests: the difference between ""it works on my machine"" and production stability How improper health checks can cascade into cluster-wide failures Storage configuration mistakes that lead to data loss The subtle namespace and labeling errors that break everything

Observability Blind Spots

Why basic CPU/memory metrics aren't enough for Kubernetes troubleshooting Missing runtime security monitoring that could have prevented breaches Log aggregation anti-patterns that hide critical failure signals How to detect anomalous behavior before it impacts users

Scaling and Performance Traps

HPA configurations that create resource thrashing instead of smooth scaling Node scheduling mistakes that lead to resource waste and outages Network bottlenecks that aren't obvious until it's too late

Beyond the Problems: Practical Solutions This isn't just a catalog of disasters—you'll walk away with:

Actionable checklists for security hardening Tool recommendations for continuous monitoring and assessment Automation strategies to prevent configuration drift Proven patterns for reliable observability

Whether you're just starting your Kubernetes journey or managing enterprise clusters, this session will help you identify potential issues before they become production incidents. We'll cover everything from CIS Benchmark compliance to modern runtime security approaches, ensuring your clusters are both performant and secure."
,confirmed,Sudip Chakraborty & Gaurav Chauhan,1,1,Zomato,Sudip Chakraborty & Gaurav Chauhan.png,https://www.linkedin.com/in/sudipchakraborty-iitkgp/,https://www.linkedin.com/in/gaurav-chauhan-iit/,,,Mastering ECS at Scale: A Journey from Chaos to Control on 100% Spot Instances,"This is a story from the trenches of running one of India’s largest ECS fleets—serving millions of requests entirely on infrastructure that can disappear with just two minutes’ notice. We began with the “easy path” of a third-party managed solution, but as we scaled, it quickly became our biggest bottleneck and a massive cost center.  

This session is our journey of taking back control. We’ll share the hard-earned lessons from hitting undocumented AWS limits, battling against opaque “black box” algorithms, and enduring production outages that forced us to innovate.  

**You’ll learn how we:**  
- Built custom controllers and predictive scaling  
- Slashed instance boot times by 75% through EBS optimization  
- Developed a “25-second miracle” shutdown process  

All of this allowed us not just to survive—but to thrive—in the chaos of a 100% Spot environment, achieving **99.99% uptime** while cutting compute costs by **60%**.  

This is how we transformed ECS from a simple orchestrator into a battle-hardened, intelligent platform.  
",,"**Gaurav Chauhan** is a Software Development Engineer at Zomato, with prior experience at Oracle, CRED, and Capital 2B. An alumnus of IIT Delhi, he has worked across backend systems, data science, and cloud infrastructure, and has held leadership roles driving large-scale initiatives.

**Sudip Chakraborty** is a Software Development Engineer at Zomato, working on the platform team with a focus on reliability, benchmarking, and large-scale microservice optimizations. Over the past three years at Zomato, he has contributed to ML Ops, backend systems, and platform engineering, leveraging technologies like Golang, Kubernetes, Terraform, and Kafka."